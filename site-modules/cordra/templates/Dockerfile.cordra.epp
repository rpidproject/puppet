<%- | String[1] $docker_base,
      String[1] $cordra_download_url,
      Hash[String, Type::PortNumber] $ports,
| -%>
FROM <%= $docker_base %>

LABEL org.label-schema.vendor="RPID" \
  org.label-schema.url="https://www.cordra.org/unconfiguredInstanceDownload" \
  org.label-schema.name="Cordra Server" \
  org.label-schema.version="1.0.7" \
  org.label-schema.docker.schema-version="1.0"

ADD ./ /cordra

WORKDIR /cordra

# Install required packages
RUN apk add --update \
  curl \
  unzip \
  && rm -rf /var/cache/apk/*

# Download and unpack Cordra distribution
RUN curl -o /tmp/cordra.zip <%= $cordra_download_url %> \
  && unzip -d /tmp/cordra /tmp/cordra.zip \
  && mv /tmp/cordra/cordra-*/* /cordra \
  && rm /tmp/cordra.zip \
  && rm -r /tmp/cordra 

VOLUME /data
VOLUME /handle

EXPOSE <%= $ports['https'] %> <%= $ports['http'] %> <%= $ports['server'] %> <%= $ports['ssl'] %>

RUN echo "#!/bin/sh" > /cordra/sw/bin/do-docker-configure.sh \
  && echo "/cordra/sw/bin/configure-unconfigured-cordra /data < /data/configure.cmd" >> /cordra/sw/bin/do-docker-configure.sh \
  && chmod 755 /cordra/sw/bin/do-docker-configure.sh

CMD if [[ -f /data/privatekey ]]; then \
      echo keys exist, skipping cordra server setup...; \
    else \
      echo No keys found, running cordra server setup...; \
      echo Copying webapps...;\
      cp -r /cordra/data/webapps-priority /data; \
      echo Configuring server..;\
      cp /data/repoInit.json.settings /data/repoInit.json; \
      /cordra/sw/bin/do-docker-configure.sh; \
      echo done.; \
    fi ;\
    echo Starting server...; \
    /cordra/sw/bin/do-server /data
